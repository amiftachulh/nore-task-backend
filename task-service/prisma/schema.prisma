// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model KategoriTask {
  id        String @id @default(uuid()) @db.VarChar(36)
  nama      String
  projectId String @map("project_id") @db.VarChar(36)
  index     Int
  task      Task[]

  @@map("kategori_task")
}

model Task {
  id             String       @id @default(uuid()) @db.VarChar(36)
  nama           String
  kategoriTask   KategoriTask @relation(fields: [kategoriTaskId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  kategoriTaskId String       @map("kategori_task_id") @db.VarChar(36)
  kebutuhan      String       @db.Text
  prioritas      String
  attachment     String       @db.Text
  index          Int
  subtask        Subtask[]
  komentar       Komentar[]
  labelTask      LabelTask[]

  @@map("task")
}

model Komentar {
  id        String    @id @default(uuid()) @db.VarChar(36)
  taskId    String    @map("task_id") @db.VarChar(36)
  task      Task      @relation(fields: [taskId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId    String    @map("user_id") @db.VarChar(36)
  konten    String    @db.VarChar(500)
  createdAt DateTime  @map("created_at")
  updatedAt DateTime? @map("updated_at")

  @@map("komentar")
}

model LabelTask {
  id      String @id @default(uuid()) @db.VarChar(36)
  nama    String
  taskId  String @map("task_id") @db.VarChar(36)
  task    Task   @relation(fields: [taskId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  bgColor String @map("bg_color") @db.VarChar(7)
  color   String @db.VarChar(7)

  @@map("label_task")
}

model Subtask {
  id           String         @id @default(uuid()) @db.VarChar(36)
  task         Task           @relation(fields: [taskId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  taskId       String         @map("task_id") @db.VarChar(36)
  userId       String?        @map("user_id") @db.VarChar(36)
  keterangan   String         @db.Text
  poin         Int            @default(1)
  labelSubtask LabelSubtask[]

  @@map("subtask")
}

model LabelSubtask {
  id        String  @id @default(uuid()) @db.VarChar(36)
  nama      String
  subtaskId String  @map("subtask_id") @db.VarChar(36)
  subtask   Subtask @relation(fields: [subtaskId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  bgColor   String  @map("bg_color") @db.VarChar(7)
  color     String  @db.VarChar(7)

  @@map("label_subtask")
}
